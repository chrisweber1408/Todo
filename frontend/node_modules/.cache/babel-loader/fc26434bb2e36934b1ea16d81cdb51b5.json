{"ast":null,"code":"var _jsxFileName = \"/Users/chris/IdeaProjects/Todo/frontend/src/components/InputForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { createTask } from \"../service/apiServices\";\nimport \"./InputForm.css\";\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputForm(props) {\n  _s();\n\n  var _localStorage$getItem, _localStorage$getItem2;\n\n  const [task, setTask] = useState((_localStorage$getItem = localStorage.getItem(\"task\")) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"\");\n  const [description, setDescription] = useState((_localStorage$getItem2 = localStorage.getItem(\"des\")) !== null && _localStorage$getItem2 !== void 0 ? _localStorage$getItem2 : \"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    localStorage.setItem(\"task\", task);\n  }, [task]);\n  useEffect(() => {\n    localStorage.setItem(\"des\", description);\n  }, [description]);\n\n  const submitForm = ev => {\n    ev.preventDefault();\n    createTask({\n      task: task,\n      description: description,\n      status: \"OPEN\"\n    }).then(() => {\n      setTask(\"\");\n      setDescription(\"\");\n      props.onTaskCreation();\n    }).catch(() => setErrorMessage(\"The task could not be crated\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"inputfield\",\n          type: \"text\",\n          value: task,\n          placeholder: \"Task\",\n          onChange: event => setTask(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfield\",\n          type: \"text\",\n          value: description,\n          placeholder: \"Description\",\n          onChange: event => setDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inputformbutton\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputForm, \"UQkwiuXdHG4LGxLysgqy2XZ5Q8c=\");\n\n_c = InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useEffect","useState","createTask","TextField","InputForm","props","task","setTask","localStorage","getItem","description","setDescription","errorMessage","setErrorMessage","setItem","submitForm","ev","preventDefault","status","then","onTaskCreation","catch","event","target","value"],"sources":["/Users/chris/IdeaProjects/Todo/frontend/src/components/InputForm.tsx"],"sourcesContent":["import {FormEvent, useEffect, useState} from \"react\";\nimport {createTask} from \"../service/apiServices\";\nimport \"./InputForm.css\"\nimport {TextField} from \"@mui/material\";\n\ninterface InputFormProps {\n    onTaskCreation: () => void;\n}\n\nexport default function InputForm(props: InputFormProps) {\n\n    const [task, setTask] = useState(localStorage.getItem(\"task\") ?? \"\")\n    const [description, setDescription] = useState(localStorage.getItem(\"des\") ?? \"\")\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n\n\n    useEffect(()=>{\n        localStorage.setItem(\"task\", task)\n    },[task])\n\n    useEffect(()=>{\n        localStorage.setItem(\"des\", description)\n    },[description])\n\n\n    const submitForm = (ev: FormEvent) => {\n        ev.preventDefault()\n        createTask({task: task, description: description, status: \"OPEN\"})\n            .then(() => {\n                setTask(\"\")\n                setDescription(\"\")\n                props.onTaskCreation()\n            })\n            .catch(()=> setErrorMessage(\"The task could not be crated\"))\n    }\n\n    return (\n        <div>\n            <form onSubmit={submitForm}>\n                <span className={\"input\"}>\n                    <TextField className={\"inputfield\"} type=\"text\" value={task} placeholder={\"Task\"}\n                           onChange={event => setTask(event.target.value)}/>\n                </span>\n                <span className={\"input\"}>\n                    <input className={\"inputfield\"} type=\"text\" value={description} placeholder={\"Description\"}\n                       onChange={event => setDescription(event.target.value)}/>\n                </span>\n                <span className={\"inputformbutton\"}>\n                    <input type=\"submit\" value={\"Confirm\"}/>\n                </span>\n                {errorMessage && <span className={\"error\"}>{errorMessage}</span>}\n            </form>\n        </div>\n    )\n}"],"mappings":";;;AAAA,SAAmBA,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,OAAO,iBAAP;AACA,SAAQC,SAAR,QAAwB,eAAxB;;AAMA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;EAAA;;EAAA;;EAErD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,0BAACO,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,yEAAiC,EAAjC,CAAhC;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,2BAACO,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAD,2EAAgC,EAAhC,CAA9C;EACA,MAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;EAIAD,SAAS,CAAC,MAAI;IACVQ,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BR,IAA7B;EACH,CAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;EAIAN,SAAS,CAAC,MAAI;IACVQ,YAAY,CAACM,OAAb,CAAqB,KAArB,EAA4BJ,WAA5B;EACH,CAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;EAKA,MAAMK,UAAU,GAAIC,EAAD,IAAmB;IAClCA,EAAE,CAACC,cAAH;IACAf,UAAU,CAAC;MAACI,IAAI,EAAEA,IAAP;MAAaI,WAAW,EAAEA,WAA1B;MAAuCQ,MAAM,EAAE;IAA/C,CAAD,CAAV,CACKC,IADL,CACU,MAAM;MACRZ,OAAO,CAAC,EAAD,CAAP;MACAI,cAAc,CAAC,EAAD,CAAd;MACAN,KAAK,CAACe,cAAN;IACH,CALL,EAMKC,KANL,CAMW,MAAKR,eAAe,CAAC,8BAAD,CAN/B;EAOH,CATD;;EAWA,oBACI;IAAA,uBACI;MAAM,QAAQ,EAAEE,UAAhB;MAAA,wBACI;QAAM,SAAS,EAAE,OAAjB;QAAA,uBACI,QAAC,SAAD;UAAW,SAAS,EAAE,YAAtB;UAAoC,IAAI,EAAC,MAAzC;UAAgD,KAAK,EAAET,IAAvD;UAA6D,WAAW,EAAE,MAA1E;UACO,QAAQ,EAAEgB,KAAK,IAAIf,OAAO,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd;QADjC;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAM,SAAS,EAAE,OAAjB;QAAA,uBACI;UAAO,SAAS,EAAE,YAAlB;UAAgC,IAAI,EAAC,MAArC;UAA4C,KAAK,EAAEd,WAAnD;UAAgE,WAAW,EAAE,aAA7E;UACG,QAAQ,EAAEY,KAAK,IAAIX,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd;QADpC;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QALJ,eASI;QAAM,SAAS,EAAE,iBAAjB;QAAA,uBACI;UAAO,IAAI,EAAC,QAAZ;UAAqB,KAAK,EAAE;QAA5B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QATJ,EAYKZ,YAAY,iBAAI;QAAM,SAAS,EAAE,OAAjB;QAAA,UAA2BA;MAA3B;QAAA;QAAA;QAAA;MAAA,QAZrB;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GA9CuBR,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}